{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "PersonAPI v1",
    "version": "v1"
  },
  "paths": {
    "/api": {
      "get": {
        "operationId": "GetApi",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "PostApi",
        "requestBody": {
          "x-name": "inputPers",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/{unzr}": {
      "get": {
        "operationId": "GetApi2",
        "parameters": [
          {
            "name": "unzr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "PostApi2",
        "parameters": [
          {
            "name": "unzr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "inputPers",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonItem"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "PutApi",
        "parameters": [
          {
            "name": "unzr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "inputPers",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonItem"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "DeleteApi",
        "parameters": [
          {
            "name": "unzr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PersonItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "unzr"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 30
          },
          "surname": {
            "type": "string",
            "maxLength": 50
          },
          "patronym": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderEnum"
          },
          "rnokpp": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "passportNumber": {
            "type": "string",
            "nullable": true
          },
          "unzr": {
            "type": "string",
            "maxLength": 10,
            "minLength": 1
          },
          "inserted": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GenderEnum": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "male",
          "female"
        ],
        "enum": [
          0,
          1
        ]
      }
    }
  }
}